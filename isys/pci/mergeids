#!/usr/bin/perl

require("translations");

sub sortFile {
    my($file) = @_;

    rename($file, "$file" . ".old");
    system("sort < $file.old > $file");
}

sub parseLine {
    my($line) = @_;

    $line =~ /([^|]*)\|(.*)/;
    $class = $1;
    $device = $2;
    $class =~ s/  *$//;
    $device =~ s/  *$//;
    $name = $class . "|" . $device;

    return  $name;
}

sortFile(unsupported);
sortFile(video);

open(F, "<unsupported");
while (<F>) {
    chop;
    if (/^#/) { next };
    $unsupported{parseLine($_)} = 1;
}
close(F);

open(F, "<video");
while (<F>) {
    chop;
    if (/^#/) { next };
    $unsupported{parseLine($_)} = 1;
}
close(F);

open(F, "<kernel");
while (<F>) {
    chop;
    if (/^#/) { next };
    s/  *$//;
    if (!length($_)) { next };

    if (/^[A-Za-z0-9]/) {
	$driver = $_;
    } else {
	s/^[ \t]+//;
	$drivers{parseLine($_)} = $driver;
    }
}

open(F, "<pci.ids");
open(UNKNOWN, ">unknown");
open(DRIVERS, ">driverlist.h");

print DRIVERS "struct pciDrivers pciDriverList[] = {\n";

$class = "";
$gotunknown = 0;

while (<F>) {
    chop;
    s/   */ /g;
    s/^  *//g;
    s/  *$//g;
    if (/^#.*/) { next };
    if (!length($_)) { next };

    if (/^\t/) {
	if ($class eq "") {
	    die "unexpected device\n";
	}
	s/\t([0-9A-Fa-f]+) +//;
	$devid = $1;

	$name = $class . "|" . $_;
	if ($unsupported{$name}) {
	} elsif ($drivers{$name}) {
	    printf(DRIVERS "\t{ 0x%s, 0x%s, \"%s\"},\n", $classid, $devid, 
		   $drivers{$name});
	} else {
	    printf(UNKNOWN "%-25s|%s\n", $class, $_);
	    $gotunknown = 1;
	}
    } else {
	s/([0-9A-Fa-f]+) +//;
	$classid = $1;
	if ($classtr{$_}) {
	    $class = $classtr{$_};
	} else {
	    $class = $_;
	}
    }
}

close(F);

print DRIVERS "};\n";

if ($gotunknown) {
    print "Go read the unsupported file and move those entries to better locations!\n";
    exit 1
} else {
    unlink("unknown");
}
