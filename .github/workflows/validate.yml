name: validate
on: [push, pull_request_target]
jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # empty = release that corresponds to current branch name
        release: ['', 'eln']
        include:
          - release: eln
            build-args: '--build-arg=image=quay.io/fedoraci/fedora:eln-x86_64'
    env:
      CI_TAG: '${{ matrix.release }}'
      CONTAINER_BUILD_ARGS: '${{ matrix.build-args }}'
    timeout-minutes: 30

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Rebase to current master
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git log --oneline -1 origin/master
          git rebase origin/master

      - name: Check if container changed in this PR
        id: check-dockerfile-changed
        run: |
          changes=$(git diff origin/master..HEAD -- dockerfile/anaconda-ci/)
          # print for debugging
          echo "$changes"
          [ -z "$changes" ] || echo "::set-output name=changed::true"

      # build container if files for dockerfile changed in the PR
      - name: Build anaconda-ci container
        # FIXME: always build ELN container, until we publish it to quay.io
        if: steps.check-dockerfile-changed.outputs.changed || matrix.release == 'eln'
        run: make -f Makefile.am anaconda-ci-build

      - name: Run tests in anaconda-ci container
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-ci || { cat test-logs/test-suite.log; exit 1; }

      - name: Upload test and coverage logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'logs${{ matrix.release }}'
          path: test-logs/*

  rpm-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # empty = release that corresponds to current branch name
        release: ['', 'eln']
        include:
          - release: eln
            build-args: '--build-arg=image=quay.io/fedoraci/fedora:eln-x86_64'
    env:
      CI_TAG: '${{ matrix.release }}'
      CONTAINER_BUILD_ARGS: '${{ matrix.build-args }}'
    timeout-minutes: 30

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Rebase to current master
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git log --oneline -1 origin/master
          git rebase origin/master

      - name: Build RPM test container
        run: make -f Makefile.am anaconda-rpm-build

      - name: Run RPM tests in container
        run: make -f Makefile.am container-rpm-test

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'logs-rpm-test'
          path: test-logs/*
