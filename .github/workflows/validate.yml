name: validate
on: [push, pull_request_target]
jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # empty = release that corresponds to current branch name
        release: ['', 'eln']
        include:
          - release: eln
            build-args: '--build-arg=eln=1'
    env:
      CI_TAG: '${{ matrix.release }}'
      CONTAINER_BUILD_ARGS: '${{ matrix.build-args }}'

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Rebase to current master
        run: git rebase origin/master

      - name: Check if container changed in this PR
        id: check-dockerfile-changed
        run: |
          changes=$(git diff origin/master..HEAD -- dockerfile/anaconda-ci/)
          # print for debugging
          echo "$changes"
          [ -z "$changes" ] || echo "::set-output name=changed::true"

      # build container if files for dockerfile changed in the PR
      - name: Build anaconda-ci container
        # FIXME: always build ELN container, until we publish it to quay.io
        if: steps.check-dockerfile-changed.outputs.changed || matrix.release == 'eln'
        run: make -f Makefile.am anaconda-ci-build

      - name: Run tests in anaconda-ci container
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-ci || { cat test-logs/test-suite.log; exit 1; }

      - name: Upload test and coverage logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'logs${{ matrix.release }}'
          path: test-logs/*

  rpm-tests:
    runs-on: ubuntu-20.04
    # start from a minimal container and install only our build deps; anaconda-ci container has too many other packages
    container:
      image: docker.io/fedora:rawhide
      # HACK: bash's builtin `test -r` fails due to incompatible seccomp profile
      options: --security-opt=seccomp=unconfined
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}

      - name: install build dependencies
        run: ./scripts/testing/install_dependencies.sh -y

      - name: build RPMs
        run: |
          ./autogen.sh
          ./configure
          make rpms

      - name: run RPM tests
        run: |
          make run-rpm-tests-only || { cat tests/rpm_tests.log; exit 1; }

      - name: test installability
        run: |
          dnf install -y result/build/01-rpm-build/*.rpm
